<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 title="Artwork"
		 close="titlewindow_closeHandler(event)"
		 windowMoveEnd="titlewindow_windowMoveEndHandler(event)"
		 width="680" height="540">
	
	<fx:Script>
		<![CDATA[
			import com.decalrus.event.ArtworkEvent;
			import com.decalrus.event.ObjectEvent;
			import com.decalrus.model.vo.ArtworkVO;
			
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TitleWindowBoundsEvent;
			
			public static const ARTWORK_SELECTED:String = "artworkSelected";
			public static const TYPE_SELECTED:String = "typeSelected";
			
			[Bindable]
			public var dataProvider:ArrayCollection;
			
			protected function artworkList_changeHandler(event:IndexChangeEvent):void
			{
				var vo:ArtworkVO = this.dataProvider.getItemAt(event.newIndex) as ArtworkVO;
				this.artworkList.selectedIndex = -1;
				this.dispatchEvent(new ArtworkEvent(ArtworkComponent.ARTWORK_SELECTED, vo));
			}
			
			protected function titlewindow_closeHandler(event:CloseEvent):void
			{
				PopUpManager.removePopUp(this);
			}
			
			protected function artworkTypeList_changeHandler(event:IndexChangeEvent):void
			{
				this.dispatchEvent(new ObjectEvent(ArtworkComponent.TYPE_SELECTED, this.artworkTypeList.selectedItem));
			}
			
			protected function artworkTypeList_creationCompleteHandler(event:FlexEvent):void
			{
				this.dispatchEvent(new ObjectEvent(ArtworkComponent.TYPE_SELECTED, this.artworkTypeList.selectedItem));
			}
			
			protected function titlewindow_windowMoveEndHandler(event:TitleWindowBoundsEvent):void
			{
				var windowX:Number = event.afterBounds.x;
				var windowY:Number = event.afterBounds.y;
				var dH:Number = this.moveArea.height;
				if (windowY + dH < 6)
				{
					this.x = event.beforeBounds.x;
					this.y = event.beforeBounds.y;
				}
				else if (windowX * -1 > event.afterBounds.width - 6)
				{
					this.x = event.beforeBounds.x;
					this.y = event.beforeBounds.y;
				}
				else if (windowY > this.stage.stageHeight - 6)
				{
					this.x = event.beforeBounds.x;
					this.y = event.beforeBounds.y;
				}
				else if (windowX > this.stage.stageWidth - 6)
				{
					this.x = event.beforeBounds.x;
					this.y = event.beforeBounds.y;
				}	
			}
			
		]]>
	</fx:Script>
	
	<fx:Metadata>
		[Event(name="artworkSelected", type="com.decalrus.event.ArtworkEvent")]
		[Event(name="typeSelected", type="com.decalrus.event.ObjectEvent")]
	</fx:Metadata>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout paddingTop="5" paddingBottom="5" />
	</s:layout>
	
	<mx:FormItem direction="horizontal">
		<s:Label text="Choose Artwork Type:" fontWeight="bold" />
		<s:DropDownList id="artworkTypeList" fontWeight="normal" 
						creationComplete="artworkTypeList_creationCompleteHandler(event)"
						change="artworkTypeList_changeHandler(event)" selectedIndex="0">
			<s:dataProvider>
				<s:ArrayList>
					<fx:String>Men</fx:String>
					<fx:String>Women</fx:String>
					<fx:String>Neutral</fx:String>
				</s:ArrayList>
			</s:dataProvider>
		</s:DropDownList>
	</mx:FormItem>
	
	<s:List id="artworkList" dataProvider="{this.dataProvider}" 
			width="100%" height="100%" borderAlpha="0" borderColor="0xffffff"
			itemRenderer="com.decalrus.view.component.renderer.ArtworkItemRenderer" 
			change="artworkList_changeHandler(event)">
		<s:layout>
			<s:TileLayout />
		</s:layout>
	</s:List>
</s:TitleWindow>
